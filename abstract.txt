////main  prog


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ConsoleApplication2
{
    class Program
    {
        static void Main(string[] args)
        {

            vehicle v1=new car();///because it cannot create object of abstract class
            v1.description();
            v1.feature();

            vehicle v2 = new biKe();///because it cannot create object of abstract class
            v2.description();
            v2.feature();
          
          
        }
    }
}





/////vehicle



using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ConsoleApplication2
{
    abstract class vehicle
    {
        int nofwheels;

        public int Nofwheels
        {
            get
            {
                return nofwheels;
            }
            set
            {
                nofwheels = value;

            }
        }

            public void description()
            {
                Console.WriteLine("used for transportation");
            }


            public abstract void feature();
            //{
               // Console.WriteLine(" saves time");
            //}
    }
}







//////////car






using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ConsoleApplication2
{
    class car : vehicle
    {
        public car()
        {
            Nofwheels = 4;
        }
        public override void feature() ////for abstract method in main class there must be class  
        {                              ////declared in child class..override keyword is used for that
            Console.WriteLine(" useful for family");
        }
    }
}






/////bike






using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ConsoleApplication2
{
    class biKe : vehicle
    {
        public biKe()
        {
            Nofwheels = 2;
        }
        public override void feature()
        {
            Console.WriteLine(" useful for individual");
        }
    }
}


